version: '3'

services:
  api-gateway:
    build:
      context: 'api-gateway/'
    container_name: api-gateway
    ports:
      - 3333:3333
    networks:
      - backend
  eureka-server:
    build:
      context: 'eureka-server/'
    container_name: eureka-server
    ports:
      - 4444:4444
    networks:
      - backend 
  order-service:
    build:
      context: 'order-service/'
    container_name: order-service
    ports:
      - 5555:5555
    depends_on:
      - eureka-server
      - api-gateway
    networks:
      - backend 
  product-recommendation-service:
    build:
      context: 'product-recommendation-service/'
    container_name: product-recommendation-service
    ports:
      - 7777:7777
    depends_on:
      - eureka-server
      - api-gateway
    networks:
      - backend 
  product-catalog-service:
    build:
      context: 'product-catalog-service/'
    container_name: product-catalog-service
    ports:
      - 6666:6666
    depends_on:
      - eureka-server
      - api-gateway
    networks:
      - backend 
  user-service:
    build:
      context: 'user-service/'
    container_name: user-service
    ports:
      - 2222:2222
    depends_on:
      - eureka-server
      - api-gateway
    networks:
      - backend 
  database:
    image: mysql:8
    container_name: database
    ports:
      - 1111:3306
    volumes:
      - ./run/var:/var/lib/mysql
      - ./run/dump/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - backend
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 1112:80
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORT: rootroot
    networks:
      - backend
networks:
  backend:
